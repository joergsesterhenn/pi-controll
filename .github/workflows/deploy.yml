name: Deploy to Raspberry Pi
permissions:
  contents: write
  attestations: write
  id-token: write
on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install uv toml-cli

      - name: Compute unique version
        id: version
        run: |
          . .venv/bin/activate
          PKG_VERSION=$(toml get --toml-path=pyproject.toml project.version)
          BUILD_NUMBER="${{ github.run_number }}"
          UNIQUE_VERSION="${PKG_VERSION}.${BUILD_NUMBER}"
          echo "UNIQUE_VERSION=$UNIQUE_VERSION" >> $GITHUB_ENV
          echo "unique_version=$UNIQUE_VERSION" >> $GITHUB_OUTPUT

      - name: Build artifact with uv
        run: |
          . .venv/bin/activate
          toml set --toml-path=pyproject.toml project.version ${{ env.UNIQUE_VERSION }}
          uv build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: dist/chickenpi-${{ env.UNIQUE_VERSION }}-py3-none-any.whl

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-${{ env.UNIQUE_VERSION }}"
          release_name: "Release ${{ env.UNIQUE_VERSION }}"
          draft: false
          prerelease: false

      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "chickenpi-dist-${{ env.UNIQUE_VERSION }}.zip"
          asset_name: "chickenpi-dist-${{ env.UNIQUE_VERSION }}.zip"
          asset_content_type: application/zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PI_HOST }}
          username: ${{ secrets.PI_USER }}
          key: ${{ secrets.PI_KEY }}
          script: |
            echo "get latest release"
